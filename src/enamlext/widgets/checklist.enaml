from enaml.widgets.api import Container, CheckBox
from enaml.core.include import Include
from enaml.layout.api import hbox, vbox


def make_checkbox(item):
    return CheckBox(text=str(item))


def make_checklist_constraints(include, orientation):
    box = hbox if orientation == 'horizontal' else vbox
    return [box(*include.objects)]


enamldef CheckList(Container):
    attr items = []
    attr checked_items = []
    attr orientation = 'vertical'

    constraints << make_checklist_constraints(_inc, orientation)

    Include: _inc:
        objects << [make_checkbox(i) for i in items]

    func check_all():
        for checkbox in _inc.objects:
            checkbox.checked = True

    func uncheck_all():
        for checkbox in _inc.objects:
            checkbox.checked = False

    func flip():
        for checkbox in _inc.objects:
            checkbox.checked = not checkbox.checked

####################################################################
#    DEMO
####################################################################
from enaml.widgets.api import Window, Form, Label, ObjectCombo, PushButton
enamldef Main(Window):
    title = 'CheckList Demo'

    Container:
        Form:
            Label:
                text = 'Orientation'
            ObjectCombo:
                items = ['vertical', 'horizontal']
                selected := _chklist.orientation

        PushButton:
            text = 'Check All'
            clicked ::
                _chklist.check_all()

        PushButton:
            text = 'Uncheck All'
            clicked ::
                _chklist.uncheck_all()

        PushButton:
            text = 'Flip'
            clicked ::
                _chklist.flip()

        CheckList: _chklist:
            items = list('abcdef')
